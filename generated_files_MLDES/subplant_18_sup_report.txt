Reading CIF file "generated_files_MLDES/subplant_18.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name           Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   button4        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   culvert_N_A    1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   culvert_N_S    2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   culvert_S_A    3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   culvert_S_S    4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   emergencystop  5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   gate_U_N_Dir   6      2 * 2     3 * 2       4 * 2       75%
  8      location pointer  n/a   gate_U_N_S     7      3 * 2     7 * 2       8 * 2       ~88%
  9      location pointer  n/a   gate_U_S_Dir   8      2 * 2     3 * 2       4 * 2       75%
  10     location pointer  n/a   gate_U_S_S     9      3 * 2     7 * 2       8 * 2       ~88%
  11     location pointer  n/a   pad_N_A        10     2 * 2     3 * 2       4 * 2       75%
  12     location pointer  n/a   pad_N_S1       11     2 * 2     3 * 2       4 * 2       75%
  13     location pointer  n/a   pad_N_S2       12     2 * 2     3 * 2       4 * 2       75%
  14     location pointer  n/a   pad_N_S3       13     2 * 2     3 * 2       4 * 2       75%
  15     location pointer  n/a   pad_S_A        14     2 * 2     3 * 2       4 * 2       75%
  16     location pointer  n/a   pad_S_S1       15     2 * 2     3 * 2       4 * 2       75%
  17     location pointer  n/a   pad_S_S2       16     2 * 2     3 * 2       4 * 2       75%
  18     location pointer  n/a   pad_S_S3       17     2 * 2     3 * 2       4 * 2       75%
  19     location pointer  n/a   stop3          18     1 * 2     2 * 2       2 * 2       100%
  20     location pointer  n/a   stop4          19     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  Total                                         20     68        120         144         ~83%

Applying automatic variable ordering:
  Number of hyperedges: 96

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                  242 (total)                 2.52 (avg/edge) [before]
    Total span:                  162 (total)                 1.69 (avg/edge) [iteration 1]
    Total span:                  168 (total)                 1.75 (avg/edge) [iteration 2]
    Total span:                  138 (total)                 1.44 (avg/edge) [iteration 3]
    Total span:                  138 (total)                 1.44 (avg/edge) [iteration 4]
    Total span:                  138 (total)                 1.44 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                  138 (total)                 1.44 (avg/edge) [before]
    Total span:                  130 (total)                 1.35 (avg/edge) [window 8..11]
    Total span:                  122 (total)                 1.27 (avg/edge) [window 13..16]
    Total span:                  122 (total)                 1.27 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name           Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   culvert_N_A    0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   culvert_N_S    1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   culvert_S_A    2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   culvert_S_S    3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   gate_U_N_Dir   4      2 * 2     3 * 2       4 * 2       75%
  6      location pointer  n/a   gate_U_N_S     5      3 * 2     7 * 2       8 * 2       ~88%
  7      location pointer  n/a   gate_U_S_S     6      3 * 2     7 * 2       8 * 2       ~88%
  8      location pointer  n/a   gate_U_S_Dir   7      2 * 2     3 * 2       4 * 2       75%
  9      location pointer  n/a   button4        8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   stop3          9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   emergencystop  10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   pad_N_S1       11     2 * 2     3 * 2       4 * 2       75%
  13     location pointer  n/a   pad_N_A        12     2 * 2     3 * 2       4 * 2       75%
  14     location pointer  n/a   pad_N_S2       13     2 * 2     3 * 2       4 * 2       75%
  15     location pointer  n/a   pad_N_S3       14     2 * 2     3 * 2       4 * 2       75%
  16     location pointer  n/a   stop4          15     1 * 2     2 * 2       2 * 2       100%
  17     location pointer  n/a   pad_S_S2       16     2 * 2     3 * 2       4 * 2       75%
  18     location pointer  n/a   pad_S_A        17     2 * 2     3 * 2       4 * 2       75%
  19     location pointer  n/a   pad_S_S3       18     2 * 2     3 * 2       4 * 2       75%
  20     location pointer  n/a   pad_S_S1       19     2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  Total                                         20     68        120         144         ~83%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     button4.released
Initial   (aut/locs init predicate):     emergencystop.released
Initial   (aut/locs init predicate):     stop3.released
Initial   (aut/locs init predicate):     stop4.released
Initial   (aut/locs init predicate):     pad_N_A.rest
Initial   (aut/locs init predicate):     pad_N_S1.closed
Initial   (aut/locs init predicate):     pad_N_S2.closed
Initial   (aut/locs init predicate):     pad_N_S3.closed
Initial   (aut/locs init predicate):     pad_S_A.rest
Initial   (aut/locs init predicate):     pad_S_S1.closed
Initial   (aut/locs init predicate):     pad_S_S2.closed
Initial   (aut/locs init predicate):     pad_S_S3.closed
Initial   (aut/locs init predicate):     culvert_N_A.closed
Initial   (aut/locs init predicate):     culvert_N_S.noflow
Initial   (aut/locs init predicate):     culvert_S_A.closed
Initial   (aut/locs init predicate):     culvert_S_S.noflow
Initial   (aut/locs init predicate):     gate_U_N_S.closed
Initial   (aut/locs init predicate):     gate_U_N_Dir.off
Initial   (aut/locs init predicate):     gate_U_S_S.closed
Initial   (aut/locs init predicate):     gate_U_S_Dir.off
Initial   (auts/locs init predicate):    <bdd 34n 1p>
Initial   (uncontrolled system):         <bdd 34n 1p>
Initial   (system, combined init/inv):   <bdd 34n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   button4.released
Marked    (aut/locs marker predicate):   emergencystop.released
Marked    (aut/locs marker predicate):   stop3.released
Marked    (aut/locs marker predicate):   stop4.released
Marked    (aut/locs marker predicate):   pad_N_A.rest
Marked    (aut/locs marker predicate):   pad_N_S1.closed
Marked    (aut/locs marker predicate):   pad_N_S2.closed
Marked    (aut/locs marker predicate):   pad_N_S3.closed
Marked    (aut/locs marker predicate):   pad_S_A.rest
Marked    (aut/locs marker predicate):   pad_S_S1.closed
Marked    (aut/locs marker predicate):   pad_S_S2.closed
Marked    (aut/locs marker predicate):   pad_S_S3.closed
Marked    (aut/locs marker predicate):   culvert_N_A.closed
Marked    (aut/locs marker predicate):   culvert_N_S.noflow
Marked    (aut/locs marker predicate):   culvert_S_A.closed
Marked    (aut/locs marker predicate):   culvert_S_S.noflow
Marked    (aut/locs marker predicate):   gate_U_N_S.closed
Marked    (aut/locs marker predicate):   gate_U_N_Dir.off
Marked    (aut/locs marker predicate):   gate_U_S_S.closed
Marked    (aut/locs marker predicate):   gate_U_S_Dir.off
Marked    (auts/locs marker predicate):  <bdd 34n 1p>
Marked    (uncontrolled system):         <bdd 34n 1p>
Marked    (system, combined marked/inv): <bdd 34n 1p>

State/event exclusion requirements:
  Event "pad_N_c_open" needs:
    emergencystop.released
    not gate_U_N_Dir.opening and gate_U_N_S.closed and (gate_U_S_S.closed and not gate_U_S_Dir.opening)
    emergencystop.released and stop4.released
  Event "pad_S_c_open" needs:
    emergencystop.released
    not gate_U_N_Dir.opening and gate_U_N_S.closed and (gate_U_S_S.closed and not gate_U_S_Dir.opening)
    emergencystop.released and stop4.released
  Event "pad_N_c_close" needs:
    emergencystop.released
    emergencystop.released and stop4.released
  Event "pad_S_c_close" needs:
    emergencystop.released
    emergencystop.released and stop4.released
  Event "culvert_N_c_enable" needs:
    emergencystop.released
    stop3.released and emergencystop.released
  Event "culvert_S_c_enable" needs:
    emergencystop.released
    stop3.released and emergencystop.released
  Event "gate_U_N_c_open" needs:
    <bdd 16n 4p>
  Event "gate_U_S_c_open" needs:
    <bdd 16n 4p>
  Event "pad_N_c_stop" needs:
    <bdd 16n 16p>
  Event "pad_S_c_stop" needs:
    <bdd 16n 4p>
  Event "culvert_N_c_disable" needs:
    button4.pushed or (stop3.pushed or emergencystop.pushed)
  Event "culvert_S_c_disable" needs:
    button4.pushed or (stop3.pushed or emergencystop.pushed)

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: button4_u_push) (guard: button4.released) (assignments: button4 := button4.pushed)
    Edge: (event: button4_u_release) (guard: button4.pushed) (assignments: button4 := button4.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop3_u_push) (guard: stop3.released) (assignments: stop3 := stop3.pushed)
    Edge: (event: stop3_u_release) (guard: stop3.pushed) (assignments: stop3 := stop3.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: pad_N_c_open) (guard: pad_N_A.rest) (assignments: pad_N_A := pad_N_A.opening)
    Edge: (event: pad_N_c_open) (guard: pad_N_A.closing) (assignments: pad_N_A := pad_N_A.opening)
    Edge: (event: pad_N_c_close) (guard: pad_N_A.rest) (assignments: pad_N_A := pad_N_A.closing)
    Edge: (event: pad_N_c_close) (guard: pad_N_A.opening) (assignments: pad_N_A := pad_N_A.closing)
    Edge: (event: pad_N_c_stop) (guard: pad_N_A.opening) (assignments: pad_N_A := pad_N_A.rest)
    Edge: (event: pad_N_c_stop) (guard: pad_N_A.closing) (assignments: pad_N_A := pad_N_A.rest)
    Edge: (event: pad_N_S1_u_closed_off) (guard: pad_N_S1.closed and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.between)
    Edge: (event: pad_N_S1_u_open_on) (guard: pad_N_S1.between and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.open)
    Edge: (event: pad_N_S2_u_closed_off) (guard: pad_N_A.opening and pad_N_S2.closed) (assignments: pad_N_S2 := pad_N_S2.between)
    Edge: (event: pad_N_S2_u_open_on) (guard: pad_N_A.opening and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.open)
    Edge: (event: pad_N_S3_u_closed_off) (guard: pad_N_A.opening and pad_N_S3.closed) (assignments: pad_N_S3 := pad_N_S3.between)
    Edge: (event: pad_N_S3_u_open_on) (guard: pad_N_A.opening and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.open)
    Edge: (event: pad_N_S1_u_closed_on) (guard: pad_N_S1.between and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.closed)
    Edge: (event: pad_N_S1_u_open_off) (guard: pad_N_S1.open and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.between)
    Edge: (event: pad_N_S2_u_closed_on) (guard: pad_N_A.closing and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.closed)
    Edge: (event: pad_N_S2_u_open_off) (guard: pad_N_A.closing and pad_N_S2.open) (assignments: pad_N_S2 := pad_N_S2.between)
    Edge: (event: pad_N_S3_u_closed_on) (guard: pad_N_A.closing and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.closed)
    Edge: (event: pad_N_S3_u_open_off) (guard: pad_N_A.closing and pad_N_S3.open) (assignments: pad_N_S3 := pad_N_S3.between)
    Edge: (event: pad_S_c_open) (guard: pad_S_A.rest) (assignments: pad_S_A := pad_S_A.opening)
    Edge: (event: pad_S_c_open) (guard: pad_S_A.closing) (assignments: pad_S_A := pad_S_A.opening)
    Edge: (event: pad_S_c_close) (guard: pad_S_A.rest) (assignments: pad_S_A := pad_S_A.closing)
    Edge: (event: pad_S_c_close) (guard: pad_S_A.opening) (assignments: pad_S_A := pad_S_A.closing)
    Edge: (event: pad_S_c_stop) (guard: pad_S_A.opening) (assignments: pad_S_A := pad_S_A.rest)
    Edge: (event: pad_S_c_stop) (guard: pad_S_A.closing) (assignments: pad_S_A := pad_S_A.rest)
    Edge: (event: pad_S_S1_u_closed_off) (guard: pad_S_A.opening and pad_S_S1.closed) (assignments: pad_S_S1 := pad_S_S1.between)
    Edge: (event: pad_S_S1_u_open_on) (guard: pad_S_A.opening and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.open)
    Edge: (event: pad_S_S2_u_closed_off) (guard: pad_S_S2.closed and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.between)
    Edge: (event: pad_S_S2_u_open_on) (guard: pad_S_S2.between and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.open)
    Edge: (event: pad_S_S3_u_closed_off) (guard: pad_S_A.opening and pad_S_S3.closed) (assignments: pad_S_S3 := pad_S_S3.between)
    Edge: (event: pad_S_S3_u_open_on) (guard: pad_S_A.opening and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.open)
    Edge: (event: pad_S_S1_u_closed_on) (guard: pad_S_A.closing and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.closed)
    Edge: (event: pad_S_S1_u_open_off) (guard: pad_S_A.closing and pad_S_S1.open) (assignments: pad_S_S1 := pad_S_S1.between)
    Edge: (event: pad_S_S2_u_closed_on) (guard: pad_S_S2.between and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.closed)
    Edge: (event: pad_S_S2_u_open_off) (guard: pad_S_S2.open and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.between)
    Edge: (event: pad_S_S3_u_closed_on) (guard: pad_S_A.closing and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.closed)
    Edge: (event: pad_S_S3_u_open_off) (guard: pad_S_A.closing and pad_S_S3.open) (assignments: pad_S_S3 := pad_S_S3.between)
    Edge: (event: culvert_N_c_enable) (guard: culvert_N_A.closed) (assignments: culvert_N_A := culvert_N_A.open)
    Edge: (event: culvert_N_u_off) (guard: culvert_N_A.closed and culvert_N_S.flow) (assignments: culvert_N_S := culvert_N_S.noflow)
    Edge: (event: culvert_N_c_disable) (guard: culvert_N_A.open) (assignments: culvert_N_A := culvert_N_A.closed)
    Edge: (event: culvert_N_u_on) (guard: culvert_N_A.open and culvert_N_S.noflow) (assignments: culvert_N_S := culvert_N_S.flow)
    Edge: (event: culvert_S_c_enable) (guard: culvert_S_A.closed) (assignments: culvert_S_A := culvert_S_A.open)
    Edge: (event: culvert_S_u_off) (guard: culvert_S_A.closed and culvert_S_S.flow) (assignments: culvert_S_S := culvert_S_S.noflow)
    Edge: (event: culvert_S_c_disable) (guard: culvert_S_A.open) (assignments: culvert_S_A := culvert_S_A.closed)
    Edge: (event: culvert_S_u_on) (guard: culvert_S_A.open and culvert_S_S.noflow) (assignments: culvert_S_S := culvert_S_S.flow)
    Edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed)
    Edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open)
    Edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_S.closed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.closed)
    Edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_S.fopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_S.fopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_S.bopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_S.bopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.open)
    Edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_S.open and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_U_N_Dir" (group: 4, domain: 8+9, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_U_N_S" (group: 5, domain: 10+11, BDD variables: 3, CIF/BDD values: 7/8)].
Controlled behavior: true -> <bdd 8n 18p> [range: true, variable: location pointer for automaton "gate_U_S_S" (group: 6, domain: 12+13, BDD variables: 3, CIF/BDD values: 7/8)].
Controlled behavior: <bdd 8n 18p> -> <bdd 10n 36p> [range: true, variable: location pointer for automaton "gate_U_S_Dir" (group: 7, domain: 14+15, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 10n 36p> -> <bdd 12n 72p> [range: true, variable: location pointer for automaton "pad_N_S1" (group: 11, domain: 22+23, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 12n 72p> -> <bdd 14n 144p> [range: true, variable: location pointer for automaton "pad_N_A" (group: 12, domain: 24+25, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 14n 144p> -> <bdd 16n 288p> [range: true, variable: location pointer for automaton "pad_N_S2" (group: 13, domain: 26+27, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 16n 288p> -> <bdd 18n 576p> [range: true, variable: location pointer for automaton "pad_N_S3" (group: 14, domain: 28+29, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 18n 576p> -> <bdd 20n 1,152p> [range: true, variable: location pointer for automaton "pad_S_S2" (group: 16, domain: 32+33, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 20n 1,152p> -> <bdd 22n 2,304p> [range: true, variable: location pointer for automaton "pad_S_A" (group: 17, domain: 34+35, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 22n 2,304p> -> <bdd 24n 4,608p> [range: true, variable: location pointer for automaton "pad_S_S3" (group: 18, domain: 36+37, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 24n 4,608p> -> <bdd 26n 9,216p> [range: true, variable: location pointer for automaton "pad_S_S1" (group: 19, domain: 38+39, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: <bdd 26n 9,216p>.

Restricting behavior using state/event exclusion requirements.

Edge (event: pad_N_c_open) (guard: pad_N_A.rest) (assignments: pad_N_A := pad_N_A.opening): guard: pad_N_A.rest -> <bdd 14n 4p> [requirement: <bdd 12n 4p>].
Edge (event: pad_N_c_open) (guard: pad_N_A.closing) (assignments: pad_N_A := pad_N_A.opening): guard: pad_N_A.closing -> <bdd 14n 4p> [requirement: <bdd 12n 4p>].
Edge (event: pad_N_c_close) (guard: pad_N_A.rest) (assignments: pad_N_A := pad_N_A.closing): guard: pad_N_A.rest -> emergencystop.released and (pad_N_A.rest and stop4.released) [requirement: emergencystop.released and stop4.released].
Edge (event: pad_N_c_close) (guard: pad_N_A.opening) (assignments: pad_N_A := pad_N_A.closing): guard: pad_N_A.opening -> emergencystop.released and (pad_N_A.opening and stop4.released) [requirement: emergencystop.released and stop4.released].
Edge (event: pad_N_c_stop) (guard: pad_N_A.opening) (assignments: pad_N_A := pad_N_A.rest): guard: pad_N_A.opening -> <bdd 14n 8p> [requirement: <bdd 16n 16p>].
Edge (event: pad_N_c_stop) (guard: pad_N_A.closing) (assignments: pad_N_A := pad_N_A.rest): guard: pad_N_A.closing -> <bdd 14n 8p> [requirement: <bdd 16n 16p>].
Edge (event: pad_S_c_open) (guard: pad_S_A.rest) (assignments: pad_S_A := pad_S_A.opening): guard: pad_S_A.rest -> <bdd 14n 4p> [requirement: <bdd 12n 4p>].
Edge (event: pad_S_c_open) (guard: pad_S_A.closing) (assignments: pad_S_A := pad_S_A.opening): guard: pad_S_A.closing -> <bdd 14n 4p> [requirement: <bdd 12n 4p>].
Edge (event: pad_S_c_close) (guard: pad_S_A.rest) (assignments: pad_S_A := pad_S_A.closing): guard: pad_S_A.rest -> emergencystop.released and (stop4.released and pad_S_A.rest) [requirement: emergencystop.released and stop4.released].
Edge (event: pad_S_c_close) (guard: pad_S_A.opening) (assignments: pad_S_A := pad_S_A.closing): guard: pad_S_A.opening -> emergencystop.released and (stop4.released and pad_S_A.opening) [requirement: emergencystop.released and stop4.released].
Edge (event: pad_S_c_stop) (guard: pad_S_A.opening) (assignments: pad_S_A := pad_S_A.rest): guard: pad_S_A.opening -> <bdd 12n 3p> [requirement: <bdd 16n 4p>].
Edge (event: pad_S_c_stop) (guard: pad_S_A.closing) (assignments: pad_S_A := pad_S_A.rest): guard: pad_S_A.closing -> <bdd 12n 3p> [requirement: <bdd 16n 4p>].
Edge (event: culvert_N_c_enable) (guard: culvert_N_A.closed) (assignments: culvert_N_A := culvert_N_A.open): guard: culvert_N_A.closed -> culvert_N_A.closed and (stop3.released and emergencystop.released) [requirement: stop3.released and emergencystop.released].
Edge (event: culvert_N_c_disable) (guard: culvert_N_A.open) (assignments: culvert_N_A := culvert_N_A.closed): guard: culvert_N_A.open -> culvert_N_A.open and (culvert_N_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed)) [requirement: button4.pushed or (stop3.pushed or emergencystop.pushed)].
Edge (event: culvert_S_c_enable) (guard: culvert_S_A.closed) (assignments: culvert_S_A := culvert_S_A.open): guard: culvert_S_A.closed -> culvert_S_A.closed and (stop3.released and emergencystop.released) [requirement: stop3.released and emergencystop.released].
Edge (event: culvert_S_c_disable) (guard: culvert_S_A.open) (assignments: culvert_S_A := culvert_S_A.closed): guard: culvert_S_A.open -> culvert_S_A.open and (culvert_S_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed)) [requirement: button4.pushed or (stop3.pushed or emergencystop.pushed)].
Edge (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening): guard: gate_U_N_Dir.off -> <bdd 18n 4p> [requirement: <bdd 16n 4p>].
Edge (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening): guard: gate_U_N_Dir.closing -> <bdd 18n 4p> [requirement: <bdd 16n 4p>].
Edge (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening): guard: gate_U_S_Dir.off -> <bdd 18n 4p> [requirement: <bdd 16n 4p>].
Edge (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening): guard: gate_U_S_Dir.closing -> <bdd 18n 4p> [requirement: <bdd 16n 4p>].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: <bdd 26n 9,216p>)
    Edge: (event: button4_u_push) (guard: button4.released) (assignments: button4 := button4.pushed)
    Edge: (event: button4_u_release) (guard: button4.pushed) (assignments: button4 := button4.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop3_u_push) (guard: stop3.released) (assignments: stop3 := stop3.pushed)
    Edge: (event: stop3_u_release) (guard: stop3.pushed) (assignments: stop3 := stop3.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: pad_N_c_open) (guard: pad_N_A.rest -> <bdd 14n 4p>) (assignments: pad_N_A := pad_N_A.opening)
    Edge: (event: pad_N_c_open) (guard: pad_N_A.closing -> <bdd 14n 4p>) (assignments: pad_N_A := pad_N_A.opening)
    Edge: (event: pad_N_c_close) (guard: pad_N_A.rest -> emergencystop.released and (pad_N_A.rest and stop4.released)) (assignments: pad_N_A := pad_N_A.closing)
    Edge: (event: pad_N_c_close) (guard: pad_N_A.opening -> emergencystop.released and (pad_N_A.opening and stop4.released)) (assignments: pad_N_A := pad_N_A.closing)
    Edge: (event: pad_N_c_stop) (guard: pad_N_A.opening -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest)
    Edge: (event: pad_N_c_stop) (guard: pad_N_A.closing -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest)
    Edge: (event: pad_N_S1_u_closed_off) (guard: pad_N_S1.closed and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.between)
    Edge: (event: pad_N_S1_u_open_on) (guard: pad_N_S1.between and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.open)
    Edge: (event: pad_N_S2_u_closed_off) (guard: pad_N_A.opening and pad_N_S2.closed) (assignments: pad_N_S2 := pad_N_S2.between)
    Edge: (event: pad_N_S2_u_open_on) (guard: pad_N_A.opening and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.open)
    Edge: (event: pad_N_S3_u_closed_off) (guard: pad_N_A.opening and pad_N_S3.closed) (assignments: pad_N_S3 := pad_N_S3.between)
    Edge: (event: pad_N_S3_u_open_on) (guard: pad_N_A.opening and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.open)
    Edge: (event: pad_N_S1_u_closed_on) (guard: pad_N_S1.between and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.closed)
    Edge: (event: pad_N_S1_u_open_off) (guard: pad_N_S1.open and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.between)
    Edge: (event: pad_N_S2_u_closed_on) (guard: pad_N_A.closing and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.closed)
    Edge: (event: pad_N_S2_u_open_off) (guard: pad_N_A.closing and pad_N_S2.open) (assignments: pad_N_S2 := pad_N_S2.between)
    Edge: (event: pad_N_S3_u_closed_on) (guard: pad_N_A.closing and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.closed)
    Edge: (event: pad_N_S3_u_open_off) (guard: pad_N_A.closing and pad_N_S3.open) (assignments: pad_N_S3 := pad_N_S3.between)
    Edge: (event: pad_S_c_open) (guard: pad_S_A.rest -> <bdd 14n 4p>) (assignments: pad_S_A := pad_S_A.opening)
    Edge: (event: pad_S_c_open) (guard: pad_S_A.closing -> <bdd 14n 4p>) (assignments: pad_S_A := pad_S_A.opening)
    Edge: (event: pad_S_c_close) (guard: pad_S_A.rest -> emergencystop.released and (stop4.released and pad_S_A.rest)) (assignments: pad_S_A := pad_S_A.closing)
    Edge: (event: pad_S_c_close) (guard: pad_S_A.opening -> emergencystop.released and (stop4.released and pad_S_A.opening)) (assignments: pad_S_A := pad_S_A.closing)
    Edge: (event: pad_S_c_stop) (guard: pad_S_A.opening -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest)
    Edge: (event: pad_S_c_stop) (guard: pad_S_A.closing -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest)
    Edge: (event: pad_S_S1_u_closed_off) (guard: pad_S_A.opening and pad_S_S1.closed) (assignments: pad_S_S1 := pad_S_S1.between)
    Edge: (event: pad_S_S1_u_open_on) (guard: pad_S_A.opening and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.open)
    Edge: (event: pad_S_S2_u_closed_off) (guard: pad_S_S2.closed and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.between)
    Edge: (event: pad_S_S2_u_open_on) (guard: pad_S_S2.between and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.open)
    Edge: (event: pad_S_S3_u_closed_off) (guard: pad_S_A.opening and pad_S_S3.closed) (assignments: pad_S_S3 := pad_S_S3.between)
    Edge: (event: pad_S_S3_u_open_on) (guard: pad_S_A.opening and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.open)
    Edge: (event: pad_S_S1_u_closed_on) (guard: pad_S_A.closing and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.closed)
    Edge: (event: pad_S_S1_u_open_off) (guard: pad_S_A.closing and pad_S_S1.open) (assignments: pad_S_S1 := pad_S_S1.between)
    Edge: (event: pad_S_S2_u_closed_on) (guard: pad_S_S2.between and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.closed)
    Edge: (event: pad_S_S2_u_open_off) (guard: pad_S_S2.open and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.between)
    Edge: (event: pad_S_S3_u_closed_on) (guard: pad_S_A.closing and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.closed)
    Edge: (event: pad_S_S3_u_open_off) (guard: pad_S_A.closing and pad_S_S3.open) (assignments: pad_S_S3 := pad_S_S3.between)
    Edge: (event: culvert_N_c_enable) (guard: culvert_N_A.closed -> culvert_N_A.closed and (stop3.released and emergencystop.released)) (assignments: culvert_N_A := culvert_N_A.open)
    Edge: (event: culvert_N_u_off) (guard: culvert_N_A.closed and culvert_N_S.flow) (assignments: culvert_N_S := culvert_N_S.noflow)
    Edge: (event: culvert_N_c_disable) (guard: culvert_N_A.open -> culvert_N_A.open and (culvert_N_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_N_A := culvert_N_A.closed)
    Edge: (event: culvert_N_u_on) (guard: culvert_N_A.open and culvert_N_S.noflow) (assignments: culvert_N_S := culvert_N_S.flow)
    Edge: (event: culvert_S_c_enable) (guard: culvert_S_A.closed -> culvert_S_A.closed and (stop3.released and emergencystop.released)) (assignments: culvert_S_A := culvert_S_A.open)
    Edge: (event: culvert_S_u_off) (guard: culvert_S_A.closed and culvert_S_S.flow) (assignments: culvert_S_S := culvert_S_S.noflow)
    Edge: (event: culvert_S_c_disable) (guard: culvert_S_A.open -> culvert_S_A.open and (culvert_S_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_S_A := culvert_S_A.closed)
    Edge: (event: culvert_S_u_on) (guard: culvert_S_A.open and culvert_S_S.noflow) (assignments: culvert_S_S := culvert_S_S.flow)
    Edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed)
    Edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open)
    Edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off -> <bdd 18n 4p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing -> <bdd 18n 4p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_S.closed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.closed)
    Edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_S.fopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_S.fopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_S.bopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_S.bopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.open)
    Edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_S.open and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off -> <bdd 18n 4p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing -> <bdd 18n 4p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 34n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 34n 1p> -> <bdd 33n 1p> [backward reach with edge: (event: button4_u_release) (guard: button4.pushed) (assignments: button4 := button4.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 33n 1p> -> <bdd 32n 1p> [backward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 32n 1p> -> <bdd 31n 1p> [backward reach with edge: (event: stop3_u_release) (guard: stop3.pushed) (assignments: stop3 := stop3.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 31n 1p> -> <bdd 30n 1p> [backward reach with edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 30n 1p> -> <bdd 39n 3p> [backward reach with edge: (event: pad_N_c_stop) (guard: pad_N_A.opening -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 39n 3p> -> <bdd 40n 4p> [backward reach with edge: (event: pad_N_c_stop) (guard: pad_N_A.closing -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 40n 4p> -> <bdd 43n 6p> [backward reach with edge: (event: pad_N_S1_u_closed_on) (guard: pad_N_S1.between and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 43n 6p> -> <bdd 43n 8p> [backward reach with edge: (event: pad_N_S1_u_open_off) (guard: pad_N_S1.open and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 43n 8p> -> <bdd 44n 10p> [backward reach with edge: (event: pad_N_S2_u_closed_on) (guard: pad_N_A.closing and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 44n 10p> -> <bdd 45n 16p> [backward reach with edge: (event: pad_N_S2_u_open_off) (guard: pad_N_A.closing and pad_N_S2.open) (assignments: pad_N_S2 := pad_N_S2.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 45n 16p> -> <bdd 46n 16p> [backward reach with edge: (event: pad_N_S3_u_closed_on) (guard: pad_N_A.closing and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 46n 16p> -> <bdd 47n 28p> [backward reach with edge: (event: pad_N_S3_u_open_off) (guard: pad_N_A.closing and pad_N_S3.open) (assignments: pad_N_S3 := pad_N_S3.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 47n 28p> -> <bdd 61n 41p> [backward reach with edge: (event: pad_S_c_stop) (guard: pad_S_A.opening -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 61n 41p> -> <bdd 62n 69p> [backward reach with edge: (event: pad_S_c_stop) (guard: pad_S_A.closing -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 62n 69p> -> <bdd 65n 110p> [backward reach with edge: (event: pad_S_S1_u_closed_on) (guard: pad_S_A.closing and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 65n 110p> -> <bdd 66n 151p> [backward reach with edge: (event: pad_S_S1_u_open_off) (guard: pad_S_A.closing and pad_S_S1.open) (assignments: pad_S_S1 := pad_S_S1.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 66n 151p> -> <bdd 69n 233p> [backward reach with edge: (event: pad_S_S2_u_closed_on) (guard: pad_S_S2.between and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 69n 233p> -> <bdd 69n 315p> [backward reach with edge: (event: pad_S_S2_u_open_off) (guard: pad_S_S2.open and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 69n 315p> -> <bdd 68n 315p> [backward reach with edge: (event: pad_S_S3_u_closed_on) (guard: pad_S_A.closing and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 68n 315p> -> <bdd 69n 561p> [backward reach with edge: (event: pad_S_S3_u_open_off) (guard: pad_S_A.closing and pad_S_S3.open) (assignments: pad_S_S3 := pad_S_S3.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 69n 561p> -> <bdd 68n 561p> [backward reach with edge: (event: culvert_N_u_off) (guard: culvert_N_A.closed and culvert_N_S.flow) (assignments: culvert_N_S := culvert_N_S.noflow), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 68n 561p> -> <bdd 83n 1,879p> [backward reach with edge: (event: culvert_N_c_disable) (guard: culvert_N_A.open -> culvert_N_A.open and (culvert_N_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_N_A := culvert_N_A.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 83n 1,879p> -> <bdd 81n 1,879p> [backward reach with edge: (event: culvert_S_u_off) (guard: culvert_S_A.closed and culvert_S_S.flow) (assignments: culvert_S_S := culvert_S_S.noflow), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 81n 1,879p> -> <bdd 80n 3,197p> [backward reach with edge: (event: culvert_S_c_disable) (guard: culvert_S_A.open -> culvert_S_A.open and (culvert_S_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_S_A := culvert_S_A.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 80n 3,197p> -> <bdd 78n 3,197p> [backward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 78n 3,197p> -> <bdd 80n 6,394p> [backward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 80n 6,394p> -> <bdd 78n 6,394p> [backward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 78n 6,394p> -> <bdd 80n 12,788p> [backward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 80n 12,788p> -> <bdd 65n 2,244p> [backward reach with edge: (event: button4_u_push) (guard: button4.released) (assignments: button4 := button4.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 65n 2,244p> -> <bdd 40n 784p> [backward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 40n 784p> -> <bdd 57n 2,352p> [backward reach with edge: (event: pad_N_c_close) (guard: pad_N_A.rest -> emergencystop.released and (pad_N_A.rest and stop4.released)) (assignments: pad_N_A := pad_N_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 57n 2,352p> -> <bdd 59n 3,136p> [backward reach with edge: (event: pad_N_c_close) (guard: pad_N_A.opening -> emergencystop.released and (pad_N_A.opening and stop4.released)) (assignments: pad_N_A := pad_N_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 59n 3,136p> -> <bdd 69n 3,752p> [backward reach with edge: (event: pad_S_c_close) (guard: pad_S_A.rest -> emergencystop.released and (stop4.released and pad_S_A.rest)) (assignments: pad_S_A := pad_S_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 69n 3,752p> -> <bdd 68n 4,256p> [backward reach with edge: (event: pad_S_c_close) (guard: pad_S_A.opening -> emergencystop.released and (stop4.released and pad_S_A.opening)) (assignments: pad_S_A := pad_S_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 68n 4,256p> -> <bdd 69n 6,384p> [backward reach with edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 69n 6,384p> -> <bdd 70n 8,512p> [backward reach with edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 70n 8,512p> -> <bdd 69n 6,384p> [backward reach with edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 69n 6,384p> -> <bdd 71n 10,640p> [backward reach with edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 71n 10,640p> -> <bdd 70n 8,512p> [backward reach with edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 70n 8,512p> -> <bdd 71n 10,640p> [backward reach with edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 71n 10,640p> -> <bdd 70n 8,512p> [backward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 70n 8,512p> -> <bdd 68n 12,768p> [backward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 68n 12,768p> -> <bdd 72n 19,152p> [backward reach with edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 72n 19,152p> -> <bdd 72n 25,536p> [backward reach with edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 72n 25,536p> -> <bdd 71n 25,536p> [backward reach with edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 71n 25,536p> -> <bdd 71n 31,920p> [backward reach with edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_S.fopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 71n 31,920p> -> <bdd 72n 38,304p> [backward reach with edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_S.bopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 72n 38,304p> -> <bdd 72n 38,304p> [backward reach with edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_S.open and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 72n 38,304p> -> <bdd 71n 38,304p> [backward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 71n 38,304p> -> <bdd 68n 38,304p> [backward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 68n 38,304p> -> <bdd 52n 31,248p> [backward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward controlled-behavior: <bdd 52n 31,248p> -> <bdd 26n 9,216p> [backward reach with edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 26n 9,216p> [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 26n 9,207p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 34n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 34n 1p> -> <bdd 33n 1p> [forward reach with edge: (event: button4_u_push) (guard: button4.released) (assignments: button4 := button4.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 33n 1p> -> <bdd 32n 1p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 32n 1p> -> <bdd 31n 1p> [forward reach with edge: (event: stop3_u_push) (guard: stop3.released) (assignments: stop3 := stop3.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 31n 1p> -> <bdd 30n 1p> [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 30n 1p> -> <bdd 40n 3p> [forward reach with edge: (event: pad_N_c_open) (guard: pad_N_A.rest -> <bdd 14n 4p>) (assignments: pad_N_A := pad_N_A.opening), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 40n 3p> -> <bdd 41n 4p> [forward reach with edge: (event: pad_N_c_close) (guard: pad_N_A.rest -> emergencystop.released and (pad_N_A.rest and stop4.released)) (assignments: pad_N_A := pad_N_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 41n 4p> -> <bdd 43n 5p> [forward reach with edge: (event: pad_N_S1_u_closed_off) (guard: pad_N_S1.closed and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 43n 5p> -> <bdd 43n 6p> [forward reach with edge: (event: pad_N_S1_u_open_on) (guard: pad_N_S1.between and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 43n 6p> -> <bdd 43n 6p> [forward reach with edge: (event: pad_N_S2_u_closed_off) (guard: pad_N_A.opening and pad_N_S2.closed) (assignments: pad_N_S2 := pad_N_S2.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 43n 6p> -> <bdd 44n 9p> [forward reach with edge: (event: pad_N_S2_u_open_on) (guard: pad_N_A.opening and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 44n 9p> -> <bdd 45n 9p> [forward reach with edge: (event: pad_N_S3_u_closed_off) (guard: pad_N_A.opening and pad_N_S3.closed) (assignments: pad_N_S3 := pad_N_S3.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 45n 9p> -> <bdd 46n 15p> [forward reach with edge: (event: pad_N_S3_u_open_on) (guard: pad_N_A.opening and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 46n 15p> -> <bdd 53n 16p> [forward reach with edge: (event: pad_S_c_open) (guard: pad_S_A.rest -> <bdd 14n 4p>) (assignments: pad_S_A := pad_S_A.opening), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 53n 16p> -> <bdd 54n 30p> [forward reach with edge: (event: pad_S_c_close) (guard: pad_S_A.rest -> emergencystop.released and (stop4.released and pad_S_A.rest)) (assignments: pad_S_A := pad_S_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 54n 30p> -> <bdd 57n 30p> [forward reach with edge: (event: pad_S_S1_u_closed_off) (guard: pad_S_A.opening and pad_S_S1.closed) (assignments: pad_S_S1 := pad_S_S1.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 57n 30p> -> <bdd 58n 44p> [forward reach with edge: (event: pad_S_S1_u_open_on) (guard: pad_S_A.opening and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 58n 44p> -> <bdd 60n 72p> [forward reach with edge: (event: pad_S_S2_u_closed_off) (guard: pad_S_S2.closed and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 60n 72p> -> <bdd 60n 100p> [forward reach with edge: (event: pad_S_S2_u_open_on) (guard: pad_S_S2.between and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 60n 100p> -> <bdd 59n 100p> [forward reach with edge: (event: pad_S_S3_u_closed_off) (guard: pad_S_A.opening and pad_S_S3.closed) (assignments: pad_S_S3 := pad_S_S3.between), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 59n 100p> -> <bdd 60n 184p> [forward reach with edge: (event: pad_S_S3_u_open_on) (guard: pad_S_A.opening and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 60n 184p> -> <bdd 75n 367p> [forward reach with edge: (event: culvert_N_c_enable) (guard: culvert_N_A.closed -> culvert_N_A.closed and (stop3.released and emergencystop.released)) (assignments: culvert_N_A := culvert_N_A.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 75n 367p> -> <bdd 74n 367p> [forward reach with edge: (event: culvert_N_u_on) (guard: culvert_N_A.open and culvert_N_S.noflow) (assignments: culvert_N_S := culvert_N_S.flow), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 74n 367p> -> <bdd 73n 550p> [forward reach with edge: (event: culvert_S_c_enable) (guard: culvert_S_A.closed -> culvert_S_A.closed and (stop3.released and emergencystop.released)) (assignments: culvert_S_A := culvert_S_A.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 73n 550p> -> <bdd 74n 733p> [forward reach with edge: (event: culvert_S_u_on) (guard: culvert_S_A.open and culvert_S_S.noflow) (assignments: culvert_S_S := culvert_S_S.flow), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 74n 733p> -> <bdd 112n 746p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off -> <bdd 18n 4p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 112n 746p> -> <bdd 110n 746p> [forward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 110n 746p> -> <bdd 108n 759p> [forward reach with edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off -> <bdd 18n 4p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 108n 759p> -> <bdd 108n 772p> [forward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 108n 772p> -> <bdd 96n 768p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 96n 768p> -> <bdd 75n 768p> [forward reach with edge: (event: stop3_u_push) (guard: stop3.released) (assignments: stop3 := stop3.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 75n 768p> -> <bdd 57n 688p> [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 57n 688p> -> <bdd 74n 2,144p> [forward reach with edge: (event: pad_N_c_close) (guard: pad_N_A.opening -> emergencystop.released and (pad_N_A.opening and stop4.released)) (assignments: pad_N_A := pad_N_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 74n 2,144p> -> <bdd 89n 3,236p> [forward reach with edge: (event: pad_N_c_stop) (guard: pad_N_A.opening -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 89n 3,236p> -> <bdd 102n 5,408p> [forward reach with edge: (event: pad_S_c_close) (guard: pad_S_A.opening -> emergencystop.released and (stop4.released and pad_S_A.opening)) (assignments: pad_S_A := pad_S_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 102n 5,408p> -> <bdd 108n 6,292p> [forward reach with edge: (event: pad_S_c_stop) (guard: pad_S_A.opening -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 108n 6,292p> -> <bdd 133n 13,168p> [forward reach with edge: (event: culvert_N_c_disable) (guard: culvert_N_A.open -> culvert_N_A.open and (culvert_N_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_N_A := culvert_N_A.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 133n 13,168p> -> <bdd 131n 16,606p> [forward reach with edge: (event: culvert_S_c_disable) (guard: culvert_S_A.open -> culvert_S_A.open and (culvert_S_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_S_A := culvert_S_A.closed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 131n 16,606p> -> <bdd 129n 16,606p> [forward reach with edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 129n 16,606p> -> <bdd 131n 16,632p> [forward reach with edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 131n 16,632p> -> <bdd 127n 16,606p> [forward reach with edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 127n 16,606p> -> <bdd 131n 16,658p> [forward reach with edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 131n 16,658p> -> <bdd 129n 16,632p> [forward reach with edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 129n 16,632p> -> <bdd 131n 16,658p> [forward reach with edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 131n 16,658p> -> <bdd 139n 33,342p> [forward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 139n 33,342p> -> <bdd 131n 16,762p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 131n 16,762p> -> <bdd 137n 16,866p> [forward reach with edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_S.closed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 137n 16,866p> -> <bdd 137n 16,970p> [forward reach with edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 137n 16,970p> -> <bdd 135n 16,970p> [forward reach with edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 135n 16,970p> -> <bdd 135n 17,074p> [forward reach with edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 135n 17,074p> -> <bdd 137n 17,178p> [forward reach with edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_S.fopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 137n 17,178p> -> <bdd 137n 17,178p> [forward reach with edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_S.bopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.open), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 137n 17,178p> -> <bdd 139n 17,594p> [forward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 139n 17,594p> -> <bdd 131n 17,230p> [forward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 131n 17,230p> -> <bdd 104n 1,621p> [forward reach with edge: (event: button4_u_release) (guard: button4.pushed) (assignments: button4 := button4.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 104n 1,621p> -> <bdd 125n 2,463p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 125n 2,463p> -> <bdd 92n 1,182p> [forward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 92n 1,182p> -> <bdd 90n 927p> [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 90n 927p> -> <bdd 109n 2,027p> [forward reach with edge: (event: pad_N_c_close) (guard: pad_N_A.rest -> emergencystop.released and (pad_N_A.rest and stop4.released)) (assignments: pad_N_A := pad_N_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 109n 2,027p> -> <bdd 108n 2,171p> [forward reach with edge: (event: pad_N_c_stop) (guard: pad_N_A.opening -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 108n 2,171p> -> <bdd 88n 1,803p> [forward reach with edge: (event: pad_S_c_close) (guard: pad_S_A.rest -> emergencystop.released and (stop4.released and pad_S_A.rest)) (assignments: pad_S_A := pad_S_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward controlled-behavior: <bdd 88n 1,803p> -> <bdd 46n 307p> [forward reach with edge: (event: pad_S_c_stop) (guard: pad_S_A.opening -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 26n 9,216p>]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 46n 307p> [fixed point].
Controlled behavior: <bdd 26n 9,216p> -> <bdd 46n 307p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 34n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 34n 1p> -> <bdd 33n 1p> [backward reach with edge: (event: button4_u_release) (guard: button4.pushed) (assignments: button4 := button4.released), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 33n 1p> -> <bdd 32n 1p> [backward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 32n 1p> -> <bdd 31n 1p> [backward reach with edge: (event: stop3_u_release) (guard: stop3.pushed) (assignments: stop3 := stop3.released), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 31n 1p> -> <bdd 30n 1p> [backward reach with edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 30n 1p> -> <bdd 39n 3p> [backward reach with edge: (event: pad_N_c_stop) (guard: pad_N_A.opening -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 39n 3p> -> <bdd 40n 4p> [backward reach with edge: (event: pad_N_c_stop) (guard: pad_N_A.closing -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 40n 4p> -> <bdd 43n 6p> [backward reach with edge: (event: pad_N_S1_u_closed_on) (guard: pad_N_S1.between and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 43n 6p> -> <bdd 43n 8p> [backward reach with edge: (event: pad_N_S1_u_open_off) (guard: pad_N_S1.open and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.between), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 43n 8p> -> <bdd 44n 10p> [backward reach with edge: (event: pad_N_S2_u_closed_on) (guard: pad_N_A.closing and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 44n 10p> -> <bdd 45n 16p> [backward reach with edge: (event: pad_N_S2_u_open_off) (guard: pad_N_A.closing and pad_N_S2.open) (assignments: pad_N_S2 := pad_N_S2.between), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 45n 16p> -> <bdd 46n 16p> [backward reach with edge: (event: pad_N_S3_u_closed_on) (guard: pad_N_A.closing and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 46n 16p> -> <bdd 47n 28p> [backward reach with edge: (event: pad_N_S3_u_open_off) (guard: pad_N_A.closing and pad_N_S3.open) (assignments: pad_N_S3 := pad_N_S3.between), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 47n 28p> -> <bdd 61n 41p> [backward reach with edge: (event: pad_S_c_stop) (guard: pad_S_A.opening -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 61n 41p> -> <bdd 62n 69p> [backward reach with edge: (event: pad_S_c_stop) (guard: pad_S_A.closing -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 62n 69p> -> <bdd 65n 110p> [backward reach with edge: (event: pad_S_S1_u_closed_on) (guard: pad_S_A.closing and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 65n 110p> -> <bdd 66n 151p> [backward reach with edge: (event: pad_S_S1_u_open_off) (guard: pad_S_A.closing and pad_S_S1.open) (assignments: pad_S_S1 := pad_S_S1.between), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 66n 151p> -> <bdd 69n 233p> [backward reach with edge: (event: pad_S_S2_u_closed_on) (guard: pad_S_S2.between and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 69n 233p> -> <bdd 69n 315p> [backward reach with edge: (event: pad_S_S2_u_open_off) (guard: pad_S_S2.open and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.between), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 69n 315p> -> <bdd 68n 315p> [backward reach with edge: (event: pad_S_S3_u_closed_on) (guard: pad_S_A.closing and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 68n 315p> -> <bdd 69n 561p> [backward reach with edge: (event: pad_S_S3_u_open_off) (guard: pad_S_A.closing and pad_S_S3.open) (assignments: pad_S_S3 := pad_S_S3.between), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 69n 561p> -> <bdd 68n 561p> [backward reach with edge: (event: culvert_N_u_off) (guard: culvert_N_A.closed and culvert_N_S.flow) (assignments: culvert_N_S := culvert_N_S.noflow), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 68n 561p> -> <bdd 83n 1,879p> [backward reach with edge: (event: culvert_N_c_disable) (guard: culvert_N_A.open -> culvert_N_A.open and (culvert_N_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_N_A := culvert_N_A.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 83n 1,879p> -> <bdd 81n 1,879p> [backward reach with edge: (event: culvert_S_u_off) (guard: culvert_S_A.closed and culvert_S_S.flow) (assignments: culvert_S_S := culvert_S_S.noflow), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 81n 1,879p> -> <bdd 80n 3,197p> [backward reach with edge: (event: culvert_S_c_disable) (guard: culvert_S_A.open -> culvert_S_A.open and (culvert_S_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_S_A := culvert_S_A.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 80n 3,197p> -> <bdd 111n 3,204p> [backward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 111n 3,204p> -> <bdd 109n 3,204p> [backward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 109n 3,204p> -> <bdd 107n 3,211p> [backward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 107n 3,211p> -> <bdd 107n 3,218p> [backward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 107n 3,218p> -> <bdd 82n 564p> [backward reach with edge: (event: button4_u_push) (guard: button4.released) (assignments: button4 := button4.pushed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 82n 564p> -> <bdd 57n 199p> [backward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 57n 199p> -> <bdd 74n 591p> [backward reach with edge: (event: pad_N_c_close) (guard: pad_N_A.rest -> emergencystop.released and (pad_N_A.rest and stop4.released)) (assignments: pad_N_A := pad_N_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 74n 591p> -> <bdd 76n 787p> [backward reach with edge: (event: pad_N_c_close) (guard: pad_N_A.opening -> emergencystop.released and (pad_N_A.opening and stop4.released)) (assignments: pad_N_A := pad_N_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 76n 787p> -> <bdd 86n 941p> [backward reach with edge: (event: pad_S_c_close) (guard: pad_S_A.rest -> emergencystop.released and (stop4.released and pad_S_A.rest)) (assignments: pad_S_A := pad_S_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 86n 941p> -> <bdd 85n 1,067p> [backward reach with edge: (event: pad_S_c_close) (guard: pad_S_A.opening -> emergencystop.released and (stop4.released and pad_S_A.opening)) (assignments: pad_S_A := pad_S_A.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 85n 1,067p> -> <bdd 87n 2,134p> [backward reach with edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 87n 2,134p> -> <bdd 88n 2,136p> [backward reach with edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 88n 2,136p> -> <bdd 88n 2,136p> [backward reach with edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 88n 2,136p> -> <bdd 89n 2,138p> [backward reach with edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 89n 2,138p> -> <bdd 90n 2,140p> [backward reach with edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 90n 2,140p> -> <bdd 90n 2,140p> [backward reach with edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 90n 2,140p> -> <bdd 86n 1,075p> [backward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 86n 1,075p> -> <bdd 85n 1,079p> [backward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 85n 1,079p> -> <bdd 89n 1,087p> [backward reach with edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.closed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 89n 1,087p> -> <bdd 89n 1,095p> [backward reach with edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 89n 1,095p> -> <bdd 88n 1,095p> [backward reach with edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 88n 1,095p> -> <bdd 88n 1,103p> [backward reach with edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_S.fopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 88n 1,103p> -> <bdd 89n 1,111p> [backward reach with edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_S.bopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 89n 1,111p> -> <bdd 89n 1,111p> [backward reach with edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_S.open and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 89n 1,111p> -> <bdd 88n 1,111p> [backward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 88n 1,111p> -> <bdd 85n 1,115p> [backward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 85n 1,115p> -> <bdd 69n 919p> [backward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward controlled-behavior: <bdd 69n 919p> -> <bdd 46n 307p> [backward reach with edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released), restricted to current/previous controlled-behavior predicate: <bdd 46n 307p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 46n 307p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 46n 1,006p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: pad_N_c_open) (guard: pad_N_A.rest -> <bdd 14n 4p>) (assignments: pad_N_A := pad_N_A.opening): guard: <bdd 14n 4p> -> <bdd 26n 128p>.
Edge (event: pad_N_c_open) (guard: pad_N_A.closing -> <bdd 14n 4p>) (assignments: pad_N_A := pad_N_A.opening): guard: <bdd 14n 4p> -> <bdd 26n 128p>.
Edge (event: pad_N_c_close) (guard: pad_N_A.rest -> emergencystop.released and (pad_N_A.rest and stop4.released)) (assignments: pad_N_A := pad_N_A.closing): guard: emergencystop.released and (pad_N_A.rest and stop4.released) -> <bdd 51n 179p>.
Edge (event: pad_N_c_close) (guard: pad_N_A.opening -> emergencystop.released and (pad_N_A.opening and stop4.released)) (assignments: pad_N_A := pad_N_A.closing): guard: emergencystop.released and (pad_N_A.opening and stop4.released) -> <bdd 51n 179p>.
Edge (event: pad_N_c_stop) (guard: pad_N_A.opening -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest): guard: <bdd 14n 8p> -> <bdd 74n 470p>.
Edge (event: pad_N_c_stop) (guard: pad_N_A.closing -> <bdd 14n 8p>) (assignments: pad_N_A := pad_N_A.rest): guard: <bdd 14n 8p> -> <bdd 64n 419p>.
Edge (event: pad_S_c_open) (guard: pad_S_A.rest -> <bdd 14n 4p>) (assignments: pad_S_A := pad_S_A.opening): guard: <bdd 14n 4p> -> <bdd 26n 128p>.
Edge (event: pad_S_c_open) (guard: pad_S_A.closing -> <bdd 14n 4p>) (assignments: pad_S_A := pad_S_A.opening): guard: <bdd 14n 4p> -> <bdd 26n 128p>.
Edge (event: pad_S_c_close) (guard: pad_S_A.rest -> emergencystop.released and (stop4.released and pad_S_A.rest)) (assignments: pad_S_A := pad_S_A.closing): guard: emergencystop.released and (stop4.released and pad_S_A.rest) -> <bdd 51n 179p>.
Edge (event: pad_S_c_close) (guard: pad_S_A.opening -> emergencystop.released and (stop4.released and pad_S_A.opening)) (assignments: pad_S_A := pad_S_A.closing): guard: emergencystop.released and (stop4.released and pad_S_A.opening) -> <bdd 51n 179p>.
Edge (event: pad_S_c_stop) (guard: pad_S_A.opening -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest): guard: <bdd 12n 3p> -> <bdd 74n 374p>.
Edge (event: pad_S_c_stop) (guard: pad_S_A.closing -> <bdd 12n 3p>) (assignments: pad_S_A := pad_S_A.rest): guard: <bdd 12n 3p> -> <bdd 57n 323p>.
Edge (event: culvert_N_c_enable) (guard: culvert_N_A.closed -> culvert_N_A.closed and (stop3.released and emergencystop.released)) (assignments: culvert_N_A := culvert_N_A.open): guard: culvert_N_A.closed and (stop3.released and emergencystop.released) -> <bdd 51n 307p>.
Edge (event: culvert_N_c_disable) (guard: culvert_N_A.open -> culvert_N_A.open and (culvert_N_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_N_A := culvert_N_A.closed): guard: culvert_N_A.open and (culvert_N_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed)) -> <bdd 53n 921p>.
Edge (event: culvert_S_c_enable) (guard: culvert_S_A.closed -> culvert_S_A.closed and (stop3.released and emergencystop.released)) (assignments: culvert_S_A := culvert_S_A.open): guard: culvert_S_A.closed and (stop3.released and emergencystop.released) -> <bdd 51n 307p>.
Edge (event: culvert_S_c_disable) (guard: culvert_S_A.open -> culvert_S_A.open and (culvert_S_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed))) (assignments: culvert_S_A := culvert_S_A.closed): guard: culvert_S_A.open and (culvert_S_A.closed or button4.pushed or (stop3.pushed or emergencystop.pushed)) -> <bdd 53n 921p>.
Edge (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off -> <bdd 18n 4p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening): guard: <bdd 18n 4p> -> <bdd 24n 18p>.
Edge (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing -> <bdd 18n 4p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening): guard: <bdd 18n 4p> -> <bdd 24n 18p>.
Edge (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing): guard: gate_U_N_Dir.off -> <bdd 45n 289p>.
Edge (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing): guard: gate_U_N_Dir.opening -> <bdd 45n 289p>.
Edge (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off): guard: gate_U_N_Dir.opening -> <bdd 45n 289p>.
Edge (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off): guard: gate_U_N_Dir.closing -> <bdd 45n 289p>.
Edge (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off -> <bdd 18n 4p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening): guard: <bdd 18n 4p> -> <bdd 24n 18p>.
Edge (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing -> <bdd 18n 4p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening): guard: <bdd 18n 4p> -> <bdd 24n 18p>.
Edge (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing): guard: gate_U_S_Dir.off -> <bdd 47n 281p>.
Edge (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing): guard: gate_U_S_Dir.opening -> <bdd 47n 281p>.
Edge (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off): guard: gate_U_S_Dir.opening -> <bdd 47n 281p>.
Edge (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off): guard: gate_U_S_Dir.closing -> <bdd 47n 281p>.

Final synthesis result:
  State: (controlled-behavior: <bdd 46n 307p>)
    Edge: (event: button4_u_push) (guard: button4.released) (assignments: button4 := button4.pushed)
    Edge: (event: button4_u_release) (guard: button4.pushed) (assignments: button4 := button4.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop3_u_push) (guard: stop3.released) (assignments: stop3 := stop3.pushed)
    Edge: (event: stop3_u_release) (guard: stop3.pushed) (assignments: stop3 := stop3.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: pad_N_c_open) (guard: pad_N_A.rest -> <bdd 26n 128p>) (assignments: pad_N_A := pad_N_A.opening)
    Edge: (event: pad_N_c_open) (guard: pad_N_A.closing -> <bdd 26n 128p>) (assignments: pad_N_A := pad_N_A.opening)
    Edge: (event: pad_N_c_close) (guard: pad_N_A.rest -> <bdd 51n 179p>) (assignments: pad_N_A := pad_N_A.closing)
    Edge: (event: pad_N_c_close) (guard: pad_N_A.opening -> <bdd 51n 179p>) (assignments: pad_N_A := pad_N_A.closing)
    Edge: (event: pad_N_c_stop) (guard: pad_N_A.opening -> <bdd 74n 470p>) (assignments: pad_N_A := pad_N_A.rest)
    Edge: (event: pad_N_c_stop) (guard: pad_N_A.closing -> <bdd 64n 419p>) (assignments: pad_N_A := pad_N_A.rest)
    Edge: (event: pad_N_S1_u_closed_off) (guard: pad_N_S1.closed and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.between)
    Edge: (event: pad_N_S1_u_open_on) (guard: pad_N_S1.between and pad_N_A.opening) (assignments: pad_N_S1 := pad_N_S1.open)
    Edge: (event: pad_N_S2_u_closed_off) (guard: pad_N_A.opening and pad_N_S2.closed) (assignments: pad_N_S2 := pad_N_S2.between)
    Edge: (event: pad_N_S2_u_open_on) (guard: pad_N_A.opening and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.open)
    Edge: (event: pad_N_S3_u_closed_off) (guard: pad_N_A.opening and pad_N_S3.closed) (assignments: pad_N_S3 := pad_N_S3.between)
    Edge: (event: pad_N_S3_u_open_on) (guard: pad_N_A.opening and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.open)
    Edge: (event: pad_N_S1_u_closed_on) (guard: pad_N_S1.between and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.closed)
    Edge: (event: pad_N_S1_u_open_off) (guard: pad_N_S1.open and pad_N_A.closing) (assignments: pad_N_S1 := pad_N_S1.between)
    Edge: (event: pad_N_S2_u_closed_on) (guard: pad_N_A.closing and pad_N_S2.between) (assignments: pad_N_S2 := pad_N_S2.closed)
    Edge: (event: pad_N_S2_u_open_off) (guard: pad_N_A.closing and pad_N_S2.open) (assignments: pad_N_S2 := pad_N_S2.between)
    Edge: (event: pad_N_S3_u_closed_on) (guard: pad_N_A.closing and pad_N_S3.between) (assignments: pad_N_S3 := pad_N_S3.closed)
    Edge: (event: pad_N_S3_u_open_off) (guard: pad_N_A.closing and pad_N_S3.open) (assignments: pad_N_S3 := pad_N_S3.between)
    Edge: (event: pad_S_c_open) (guard: pad_S_A.rest -> <bdd 26n 128p>) (assignments: pad_S_A := pad_S_A.opening)
    Edge: (event: pad_S_c_open) (guard: pad_S_A.closing -> <bdd 26n 128p>) (assignments: pad_S_A := pad_S_A.opening)
    Edge: (event: pad_S_c_close) (guard: pad_S_A.rest -> <bdd 51n 179p>) (assignments: pad_S_A := pad_S_A.closing)
    Edge: (event: pad_S_c_close) (guard: pad_S_A.opening -> <bdd 51n 179p>) (assignments: pad_S_A := pad_S_A.closing)
    Edge: (event: pad_S_c_stop) (guard: pad_S_A.opening -> <bdd 74n 374p>) (assignments: pad_S_A := pad_S_A.rest)
    Edge: (event: pad_S_c_stop) (guard: pad_S_A.closing -> <bdd 57n 323p>) (assignments: pad_S_A := pad_S_A.rest)
    Edge: (event: pad_S_S1_u_closed_off) (guard: pad_S_A.opening and pad_S_S1.closed) (assignments: pad_S_S1 := pad_S_S1.between)
    Edge: (event: pad_S_S1_u_open_on) (guard: pad_S_A.opening and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.open)
    Edge: (event: pad_S_S2_u_closed_off) (guard: pad_S_S2.closed and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.between)
    Edge: (event: pad_S_S2_u_open_on) (guard: pad_S_S2.between and pad_S_A.opening) (assignments: pad_S_S2 := pad_S_S2.open)
    Edge: (event: pad_S_S3_u_closed_off) (guard: pad_S_A.opening and pad_S_S3.closed) (assignments: pad_S_S3 := pad_S_S3.between)
    Edge: (event: pad_S_S3_u_open_on) (guard: pad_S_A.opening and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.open)
    Edge: (event: pad_S_S1_u_closed_on) (guard: pad_S_A.closing and pad_S_S1.between) (assignments: pad_S_S1 := pad_S_S1.closed)
    Edge: (event: pad_S_S1_u_open_off) (guard: pad_S_A.closing and pad_S_S1.open) (assignments: pad_S_S1 := pad_S_S1.between)
    Edge: (event: pad_S_S2_u_closed_on) (guard: pad_S_S2.between and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.closed)
    Edge: (event: pad_S_S2_u_open_off) (guard: pad_S_S2.open and pad_S_A.closing) (assignments: pad_S_S2 := pad_S_S2.between)
    Edge: (event: pad_S_S3_u_closed_on) (guard: pad_S_A.closing and pad_S_S3.between) (assignments: pad_S_S3 := pad_S_S3.closed)
    Edge: (event: pad_S_S3_u_open_off) (guard: pad_S_A.closing and pad_S_S3.open) (assignments: pad_S_S3 := pad_S_S3.between)
    Edge: (event: culvert_N_c_enable) (guard: culvert_N_A.closed -> <bdd 51n 307p>) (assignments: culvert_N_A := culvert_N_A.open)
    Edge: (event: culvert_N_u_off) (guard: culvert_N_A.closed and culvert_N_S.flow) (assignments: culvert_N_S := culvert_N_S.noflow)
    Edge: (event: culvert_N_c_disable) (guard: culvert_N_A.open -> <bdd 53n 921p>) (assignments: culvert_N_A := culvert_N_A.closed)
    Edge: (event: culvert_N_u_on) (guard: culvert_N_A.open and culvert_N_S.noflow) (assignments: culvert_N_S := culvert_N_S.flow)
    Edge: (event: culvert_S_c_enable) (guard: culvert_S_A.closed -> <bdd 51n 307p>) (assignments: culvert_S_A := culvert_S_A.open)
    Edge: (event: culvert_S_u_off) (guard: culvert_S_A.closed and culvert_S_S.flow) (assignments: culvert_S_S := culvert_S_S.noflow)
    Edge: (event: culvert_S_c_disable) (guard: culvert_S_A.open -> <bdd 53n 921p>) (assignments: culvert_S_A := culvert_S_A.closed)
    Edge: (event: culvert_S_u_on) (guard: culvert_S_A.open and culvert_S_S.noflow) (assignments: culvert_S_S := culvert_S_S.flow)
    Edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed)
    Edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open)
    Edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off -> <bdd 24n 18p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing -> <bdd 24n 18p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off -> <bdd 45n 289p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening -> <bdd 45n 289p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening -> <bdd 45n 289p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing -> <bdd 45n 289p>) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_S.closed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.closed)
    Edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_S.bclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_S.fclosed and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_S.middle and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_S.fopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_S.fopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_S.bopen and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_S.bopen and gate_U_S_Dir.opening) (assignments: gate_U_S_S := gate_U_S_S.open)
    Edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_S.open and gate_U_S_Dir.closing) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off -> <bdd 24n 18p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing -> <bdd 24n 18p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off -> <bdd 47n 281p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening -> <bdd 47n 281p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening -> <bdd 47n 281p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing -> <bdd 47n 281p>) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)

Controlled system:                     exactly 7,165,952 states.

Initial (synthesis result):            <bdd 46n 307p>
Initial (uncontrolled system):         <bdd 34n 1p>
Initial (controlled system):           <bdd 34n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event pad_N_c_open: guard: <bdd 25n 128p> -> true [assume <bdd 25n 128p>].
  Event pad_N_c_close: guard: <bdd 49n 179p> -> true [assume <bdd 50n 179p>].
  Event pad_N_c_stop: guard: <bdd 83n 940p> -> true [assume <bdd 72n 787p>].
  Event pad_S_c_open: guard: <bdd 25n 128p> -> true [assume <bdd 25n 128p>].
  Event pad_S_c_close: guard: <bdd 49n 179p> -> true [assume <bdd 50n 179p>].
  Event pad_S_c_stop: guard: <bdd 79n 799p> -> true [assume <bdd 66n 595p>].
  Event culvert_N_c_enable: guard: <bdd 51n 307p> -> true [assume <bdd 51n 307p>].
  Event culvert_N_c_disable: guard: <bdd 53n 921p> -> true [assume <bdd 53n 921p>].
  Event culvert_S_c_enable: guard: <bdd 51n 307p> -> true [assume <bdd 51n 307p>].
  Event culvert_S_c_disable: guard: <bdd 53n 921p> -> true [assume <bdd 53n 921p>].
  Event gate_U_N_c_open: guard: <bdd 23n 18p> -> true [assume <bdd 23n 18p>].
  Event gate_U_N_c_close: guard: <bdd 44n 289p> -> true [assume <bdd 47n 307p>].
  Event gate_U_N_c_stop: guard: <bdd 46n 578p> -> true [assume <bdd 47n 307p>].
  Event gate_U_S_c_open: guard: <bdd 23n 18p> -> true [assume <bdd 23n 18p>].
  Event gate_U_S_c_close: guard: <bdd 45n 281p> -> true [assume <bdd 46n 282p>].
  Event gate_U_S_c_stop: guard: <bdd 49n 562p> -> true [assume <bdd 48n 307p>].

Constructing output CIF specification.
Writing output CIF file "generated_files_MLDES/subplant_18_sup.cif".

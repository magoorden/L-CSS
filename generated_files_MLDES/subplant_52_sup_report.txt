Reading CIF file "generated_files_MLDES/subplant_52.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name           Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   button11       0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   emergencystop  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   in_U_N_A       2      2 * 2     4 * 2       4 * 2       100%
  4      location pointer  n/a   in_U_N_S       3      3 * 2     8 * 2       8 * 2       100%
  5      location pointer  n/a   in_U_S_A       4      2 * 2     4 * 2       4 * 2       100%
  6      location pointer  n/a   in_U_S_S       5      3 * 2     8 * 2       8 * 2       100%
  7      location pointer  n/a   out_U_N_A      6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   out_U_N_S      7      2 * 2     4 * 2       4 * 2       100%
  9      location pointer  n/a   out_U_S_A      8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   out_U_S_S      9      2 * 2     4 * 2       4 * 2       100%
  11     location pointer  n/a   stop1          10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   stop2          11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   stop4          12     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  Total                                         13     42        92          92          100%

Applying automatic variable ordering:
  Number of hyperedges: 52

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   78 (total)                 1.50 (avg/edge) [before]
    Total span:                   68 (total)                 1.31 (avg/edge) [iteration 1]
    Total span:                   60 (total)                 1.15 (avg/edge) [iteration 2]
    Total span:                   52 (total)                 1.00 (avg/edge) [iteration 3]
    Total span:                   46 (total)                 0.88 (avg/edge) [iteration 4]
    Total span:                   46 (total)                 0.88 (avg/edge) [iteration 5]
    Total span:                   46 (total)                 0.88 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   46 (total)                 0.88 (avg/edge) [before]
    Total span:                   46 (total)                 0.88 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name           Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   in_U_N_A       0      2 * 2     4 * 2       4 * 2       100%
  2      location pointer  n/a   in_U_N_S       1      3 * 2     8 * 2       8 * 2       100%
  3      location pointer  n/a   in_U_S_A       2      2 * 2     4 * 2       4 * 2       100%
  4      location pointer  n/a   in_U_S_S       3      3 * 2     8 * 2       8 * 2       100%
  5      location pointer  n/a   out_U_N_A      4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   out_U_N_S      5      2 * 2     4 * 2       4 * 2       100%
  7      location pointer  n/a   out_U_S_A      6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   out_U_S_S      7      2 * 2     4 * 2       4 * 2       100%
  9      location pointer  n/a   button11       8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   emergencystop  9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   stop1          10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   stop2          11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   stop4          12     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  Total                                         13     42        92          92          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     button11.released
Initial   (aut/locs init predicate):     emergencystop.released
Initial   (aut/locs init predicate):     stop1.released
Initial   (aut/locs init predicate):     stop2.released
Initial   (aut/locs init predicate):     stop4.released
Initial   (aut/locs init predicate):     out_U_N_S.red
Initial   (aut/locs init predicate):     out_U_N_A.red
Initial   (aut/locs init predicate):     out_U_S_S.red
Initial   (aut/locs init predicate):     out_U_S_A.red
Initial   (aut/locs init predicate):     in_U_N_S.red
Initial   (aut/locs init predicate):     in_U_N_A.red
Initial   (aut/locs init predicate):     in_U_S_S.red
Initial   (aut/locs init predicate):     in_U_S_A.red
Initial   (auts/locs init predicate):    <bdd 21n 1p>
Initial   (uncontrolled system):         <bdd 21n 1p>
Initial   (system, combined init/inv):   <bdd 21n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   button11.released
Marked    (aut/locs marker predicate):   emergencystop.released
Marked    (aut/locs marker predicate):   stop1.released
Marked    (aut/locs marker predicate):   stop2.released
Marked    (aut/locs marker predicate):   stop4.released
Marked    (aut/locs marker predicate):   out_U_N_S.red
Marked    (aut/locs marker predicate):   out_U_N_A.red
Marked    (aut/locs marker predicate):   out_U_S_S.red
Marked    (aut/locs marker predicate):   out_U_S_A.red
Marked    (aut/locs marker predicate):   in_U_N_S.red
Marked    (aut/locs marker predicate):   in_U_N_A.red
Marked    (aut/locs marker predicate):   in_U_S_S.red
Marked    (aut/locs marker predicate):   in_U_S_A.red
Marked    (auts/locs marker predicate):  <bdd 21n 1p>
Marked    (uncontrolled system):         <bdd 21n 1p>
Marked    (system, combined marked/inv): <bdd 21n 1p>

State/event exclusion requirements:
  Event "out_U_N_c_green" needs:
    emergencystop.released
    <bdd 10n 36p>
    emergencystop.released and stop1.released and (stop2.released and stop4.released)
  Event "out_U_S_c_green" needs:
    emergencystop.released
    <bdd 10n 36p>
    emergencystop.released and stop1.released and (stop2.released and stop4.released)
  Event "in_U_N_c_green" needs:
    out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)) or (out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))
  Event "in_U_S_c_green" needs:
    out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)) or (out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))
  Event "out_U_N_c_red" needs:
    button11.pushed or emergencystop.pushed or (stop1.pushed or (stop2.pushed or stop4.pushed))
  Event "out_U_S_c_red" needs:
    button11.pushed or emergencystop.pushed or (stop1.pushed or (stop2.pushed or stop4.pushed))

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: button11_u_push) (guard: button11.released) (assignments: button11 := button11.pushed)
    Edge: (event: button11_u_release) (guard: button11.pushed) (assignments: button11 := button11.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed)
    Edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released)
    Edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed)
    Edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.red)
    Edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.redgreen)
    Edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.green)
    Edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.redgreen)
    Edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.off)
    Edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.green)
    Edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.off)
    Edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.red)
    Edge: (event: out_U_N_c_green) (guard: out_U_N_A.red) (assignments: out_U_N_A := out_U_N_A.green)
    Edge: (event: out_U_N_c_red) (guard: out_U_N_A.green) (assignments: out_U_N_A := out_U_N_A.red)
    Edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.red)
    Edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.redgreen)
    Edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.green)
    Edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.redgreen)
    Edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.off)
    Edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.green)
    Edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.off)
    Edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.red)
    Edge: (event: out_U_S_c_green) (guard: out_U_S_A.red) (assignments: out_U_S_A := out_U_S_A.green)
    Edge: (event: out_U_S_c_red) (guard: out_U_S_A.green) (assignments: out_U_S_A := out_U_S_A.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redgreen)
    Edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.redgreen)
    Edge: (event: in_U_N_c_redred) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redred)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_green) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.green)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: out_U_N_c_green) (guard: out_U_N_A.red) (assignments: out_U_N_A := out_U_N_A.green): guard: out_U_N_A.red -> <bdd 15n 36p> [requirement: <bdd 14n 36p>].
Edge (event: out_U_N_c_red) (guard: out_U_N_A.green) (assignments: out_U_N_A := out_U_N_A.red): guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed))) [requirement: button11.pushed or emergencystop.pushed or (stop1.pushed or (stop2.pushed or stop4.pushed))].
Edge (event: out_U_S_c_green) (guard: out_U_S_A.red) (assignments: out_U_S_A := out_U_S_A.green): guard: out_U_S_A.red -> <bdd 15n 36p> [requirement: <bdd 14n 36p>].
Edge (event: out_U_S_c_red) (guard: out_U_S_A.green) (assignments: out_U_S_A := out_U_S_A.red): guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed))) [requirement: button11.pushed or emergencystop.pushed or (stop1.pushed or (stop2.pushed or stop4.pushed))].
Edge (event: in_U_N_c_green) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.green): guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) [requirement: out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)) or (out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))].
Edge (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green): guard: in_U_S_A.redgreen -> in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) [requirement: out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)) or (out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off) or out_U_N_A.red and (out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: button11_u_push) (guard: button11.released) (assignments: button11 := button11.pushed)
    Edge: (event: button11_u_release) (guard: button11.pushed) (assignments: button11 := button11.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed)
    Edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released)
    Edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed)
    Edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.red)
    Edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.redgreen)
    Edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.green)
    Edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.redgreen)
    Edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.off)
    Edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.green)
    Edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.off)
    Edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.red)
    Edge: (event: out_U_N_c_green) (guard: out_U_N_A.red -> <bdd 15n 36p>) (assignments: out_U_N_A := out_U_N_A.green)
    Edge: (event: out_U_N_c_red) (guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_N_A := out_U_N_A.red)
    Edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.red)
    Edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.redgreen)
    Edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.green)
    Edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.redgreen)
    Edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.off)
    Edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.green)
    Edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.off)
    Edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.red)
    Edge: (event: out_U_S_c_green) (guard: out_U_S_A.red -> <bdd 15n 36p>) (assignments: out_U_S_A := out_U_S_A.green)
    Edge: (event: out_U_S_c_red) (guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_S_A := out_U_S_A.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redgreen)
    Edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.redgreen)
    Edge: (event: in_U_N_c_redred) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redred)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_green) (guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_N_A := in_U_N_A.green)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_S_A := in_U_S_A.green)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 21n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 21n 1p> -> <bdd 20n 1p> [backward reach with edge: (event: button11_u_release) (guard: button11.pushed) (assignments: button11 := button11.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 1p> -> <bdd 19n 1p> [backward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 1p> -> <bdd 18n 1p> [backward reach with edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 1p> -> <bdd 17n 1p> [backward reach with edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 1p> -> <bdd 16n 1p> [backward reach with edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 1p> -> <bdd 15n 1p> [backward reach with edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 1p> -> <bdd 16n 2p> [backward reach with edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 2p> -> <bdd 14n 1p> [backward reach with edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 1p> -> <bdd 22n 6p> [backward reach with edge: (event: out_U_N_c_red) (guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_N_A := out_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 22n 6p> -> <bdd 20n 6p> [backward reach with edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 6p> -> <bdd 22n 12p> [backward reach with edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 22n 12p> -> <bdd 18n 6p> [backward reach with edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 6p> -> <bdd 17n 11p> [backward reach with edge: (event: out_U_S_c_red) (guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_S_A := out_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 11p> -> <bdd 16n 11p> [backward reach with edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 11p> -> <bdd 17n 22p> [backward reach with edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 22p> -> <bdd 18n 33p> [backward reach with edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 33p> -> <bdd 17n 33p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 33p> -> <bdd 16n 22p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 22p> -> <bdd 17n 33p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 33p> -> <bdd 14n 11p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 11p> -> <bdd 13n 11p> [backward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 11p> -> <bdd 14n 22p> [backward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 22p> -> <bdd 12n 11p> [backward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 11p> -> <bdd 11n 11p> [backward reach with edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 11p> -> <bdd 12n 22p> [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 22p> -> <bdd 13n 33p> [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 33p> -> <bdd 12n 33p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 33p> -> <bdd 11n 22p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 22p> -> <bdd 12n 33p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 33p> -> <bdd 9n 11p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 9n 11p> -> <bdd 8n 11p> [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 8n 11p> -> <bdd 9n 22p> [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 9n 22p> -> <bdd 7n 11p> [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 7n 11p> -> true [backward reach with edge: (event: button11_u_push) (guard: button11.released) (assignments: button11 := button11.pushed), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 21n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 21n 1p> -> <bdd 20n 1p> [forward reach with edge: (event: button11_u_push) (guard: button11.released) (assignments: button11 := button11.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 1p> -> <bdd 19n 1p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 1p> -> <bdd 18n 1p> [forward reach with edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 1p> -> <bdd 17n 1p> [forward reach with edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 1p> -> <bdd 16n 1p> [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 1p> -> <bdd 25n 2p> [forward reach with edge: (event: out_U_N_c_green) (guard: out_U_N_A.red -> <bdd 15n 36p>) (assignments: out_U_N_A := out_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 2p> -> <bdd 24n 3p> [forward reach with edge: (event: out_U_S_c_green) (guard: out_U_S_A.red -> <bdd 15n 36p>) (assignments: out_U_S_A := out_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 3p> -> <bdd 25n 6p> [forward reach with edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 6p> -> <bdd 24n 6p> [forward reach with edge: (event: in_U_N_c_redred) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 6p> -> <bdd 36n 7p> [forward reach with edge: (event: in_U_N_c_green) (guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_N_A := in_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 36n 7p> -> <bdd 38n 14p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 14p> -> <bdd 36n 14p> [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 36n 14p> -> <bdd 34n 15p> [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 34n 15p> -> <bdd 33n 15p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 15p> -> <bdd 32n 15p> [forward reach with edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 15p> -> <bdd 31n 15p> [forward reach with edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 31n 15p> -> <bdd 24n 7p> [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 7p> -> <bdd 26n 11p> [forward reach with edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 11p> -> <bdd 26n 15p> [forward reach with edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 15p> -> <bdd 25n 11p> [forward reach with edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 11p> -> <bdd 32n 51p> [forward reach with edge: (event: out_U_N_c_red) (guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_N_A := out_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 51p> -> <bdd 36n 99p> [forward reach with edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 36n 99p> -> <bdd 36n 147p> [forward reach with edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 36n 147p> -> <bdd 34n 99p> [forward reach with edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 34n 99p> -> <bdd 33n 139p> [forward reach with edge: (event: out_U_S_c_red) (guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_S_A := out_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 139p> -> <bdd 35n 140p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 35n 140p> -> <bdd 38n 209p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 209p> -> <bdd 41n 278p> [forward reach with edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 278p> -> <bdd 40n 278p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 278p> -> <bdd 40n 279p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 279p> -> <bdd 40n 281p> [forward reach with edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 281p> -> <bdd 40n 283p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 283p> -> <bdd 40n 283p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 283p> -> <bdd 40n 352p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 352p> -> <bdd 56n 477p> [forward reach with edge: (event: in_U_N_c_green) (guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_N_A := in_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 56n 477p> -> <bdd 61n 502p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 61n 502p> -> <bdd 66n 728p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 66n 728p> -> <bdd 75n 966p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 75n 966p> -> <bdd 77n 978p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 77n 978p> -> <bdd 78n 991p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 78n 991p> -> <bdd 74n 993p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 74n 993p> -> <bdd 73n 1,019p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 73n 1,019p> -> <bdd 74n 1,019p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 74n 1,019p> -> <bdd 74n 1,251p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 74n 1,251p> -> <bdd 73n 1,550p> [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 73n 1,550p> -> <bdd 58n 185p> [forward reach with edge: (event: button11_u_release) (guard: button11.pushed) (assignments: button11 := button11.released), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 58n 185p> -> <bdd 78n 211p> [forward reach with edge: (event: out_U_N_c_green) (guard: out_U_N_A.red -> <bdd 15n 36p>) (assignments: out_U_N_A := out_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 78n 211p> -> <bdd 80n 231p> [forward reach with edge: (event: out_U_S_c_green) (guard: out_U_S_A.red -> <bdd 15n 36p>) (assignments: out_U_S_A := out_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 80n 231p> -> <bdd 82n 244p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 82n 244p> -> <bdd 81n 237p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 81n 237p> -> <bdd 81n 254p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 81n 254p> -> <bdd 79n 254p> [forward reach with edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 79n 254p> -> <bdd 95n 330p> [forward reach with edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 95n 330p> -> <bdd 93n 307p> [forward reach with edge: (event: in_U_N_c_redred) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 93n 307p> -> <bdd 96n 435p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 96n 435p> -> <bdd 94n 469p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 94n 469p> -> <bdd 94n 469p> [forward reach with edge: (event: in_U_N_c_green) (guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_N_A := in_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 94n 469p> -> <bdd 97n 491p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 97n 491p> -> <bdd 100n 508p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 100n 508p> -> <bdd 100n 547p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 100n 547p> -> <bdd 95n 550p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 95n 550p> -> <bdd 98n 624p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 98n 624p> -> <bdd 88n 570p> [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 88n 570p> -> <bdd 95n 770p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 95n 770p> -> <bdd 92n 819p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 92n 819p> -> <bdd 85n 777p> [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 85n 777p> -> <bdd 84n 777p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 84n 777p> -> <bdd 83n 777p> [forward reach with edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 83n 777p> -> <bdd 82n 777p> [forward reach with edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 82n 777p> -> <bdd 75n 741p> [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 75n 741p> -> <bdd 77n 759p> [forward reach with edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 77n 759p> -> <bdd 77n 833p> [forward reach with edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 77n 833p> -> <bdd 76n 759p> [forward reach with edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 76n 759p> -> <bdd 96n 951p> [forward reach with edge: (event: out_U_N_c_green) (guard: out_U_N_A.red -> <bdd 15n 36p>) (assignments: out_U_N_A := out_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 96n 951p> -> <bdd 105n 1,971p> [forward reach with edge: (event: out_U_N_c_red) (guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_N_A := out_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 105n 1,971p> -> <bdd 109n 2,523p> [forward reach with edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 109n 2,523p> -> <bdd 107n 3,627p> [forward reach with edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 107n 3,627p> -> <bdd 107n 2,523p> [forward reach with edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 107n 2,523p> -> <bdd 113n 2,619p> [forward reach with edge: (event: out_U_S_c_green) (guard: out_U_S_A.red -> <bdd 15n 36p>) (assignments: out_U_S_A := out_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 113n 2,619p> -> <bdd 102n 3,775p> [forward reach with edge: (event: out_U_S_c_red) (guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_S_A := out_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 102n 3,775p> -> <bdd 105n 3,811p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 105n 3,811p> -> <bdd 106n 3,845p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 106n 3,845p> -> <bdd 108n 4,106p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 108n 4,106p> -> <bdd 110n 4,382p> [forward reach with edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 110n 4,382p> -> <bdd 109n 4,382p> [forward reach with edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 109n 4,382p> -> <bdd 108n 4,643p> [forward reach with edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 108n 4,643p> -> <bdd 106n 4,609p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 106n 4,609p> -> <bdd 103n 4,541p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 103n 4,541p> -> <bdd 103n 4,609p> [forward reach with edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 103n 4,609p> -> <bdd 104n 5,247p> [forward reach with edge: (event: in_U_N_c_redred) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 104n 5,247p> -> <bdd 104n 5,315p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 104n 5,315p> -> <bdd 105n 5,981p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 105n 5,981p> -> <bdd 103n 6,017p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 103n 6,017p> -> <bdd 122n 6,307p> [forward reach with edge: (event: in_U_N_c_green) (guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_N_A := in_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 122n 6,307p> -> <bdd 127n 6,391p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 127n 6,391p> -> <bdd 136n 6,607p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 136n 6,607p> -> <bdd 144n 6,912p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 144n 6,912p> -> <bdd 151n 7,621p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 151n 7,621p> -> <bdd 152n 7,622p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 152n 7,622p> -> <bdd 150n 8,004p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 150n 8,004p> -> <bdd 154n 8,050p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 154n 8,050p> -> <bdd 152n 7,846p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 152n 7,846p> -> <bdd 148n 7,828p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 148n 7,828p> -> <bdd 148n 8,504p> [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 148n 8,504p> -> <bdd 134n 8,558p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 134n 8,558p> -> <bdd 132n 9,360p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 132n 9,360p> -> <bdd 130n 9,444p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 130n 9,444p> -> <bdd 135n 9,569p> [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 135n 9,569p> -> <bdd 57n 540p> [forward reach with edge: (event: button11_u_release) (guard: button11.pushed) (assignments: button11 := button11.released), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 57n 540p> -> <bdd 100n 859p> [forward reach with edge: (event: out_U_N_c_green) (guard: out_U_N_A.red -> <bdd 15n 36p>) (assignments: out_U_N_A := out_U_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 100n 859p> -> <bdd 104n 1,086p> [forward reach with edge: (event: out_U_S_c_green) (guard: out_U_S_A.red -> <bdd 15n 36p>) (assignments: out_U_S_A := out_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 104n 1,086p> -> <bdd 106n 1,112p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 106n 1,112p> -> <bdd 99n 1,025p> [forward reach with edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 99n 1,025p> -> <bdd 107n 1,045p> [forward reach with edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 107n 1,045p> -> <bdd 105n 998p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 105n 998p> -> <bdd 97n 930p> [forward reach with edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 97n 930p> -> <bdd 95n 956p> [forward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 95n 956p> -> <bdd 92n 773p> [forward reach with edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 92n 773p> -> <bdd 100n 778p> [forward reach with edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 100n 778p> -> <bdd 76n 657p> [forward reach with edge: (event: in_U_N_c_redred) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 76n 657p> -> <bdd 68n 662p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 68n 662p> -> <bdd 67n 368p> [forward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 67n 368p> -> <bdd 67n 340p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 67n 340p> -> <bdd 61n 320p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 61n 320p> -> <bdd 48n 288p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 48n 288p> -> <bdd 45n 260p> [forward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 45n 260p> -> <bdd 42n 208p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 42n 208p> -> <bdd 31n 172p> [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 31n 172p> -> <bdd 30n 112p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 6.
Forward controlled-behavior: <bdd 30n 112p> -> <bdd 29n 112p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 112p> -> <bdd 28n 112p> [forward reach with edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 112p> -> <bdd 27n 112p> [forward reach with edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 112p> -> <bdd 20n 64p> [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 64p> -> <bdd 21n 76p> [forward reach with edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 76p> -> <bdd 28n 136p> [forward reach with edge: (event: out_U_N_c_red) (guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_N_A := out_U_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 136p> -> <bdd 30n 184p> [forward reach with edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 184p> -> <bdd 29n 214p> [forward reach with edge: (event: out_U_S_c_red) (guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_S_A := out_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 214p> -> <bdd 24n 78p> [forward reach with edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 78p> -> <bdd 10n 16p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 7.
Forward controlled-behavior: <bdd 10n 16p> [fixed point].
Controlled behavior: true -> <bdd 10n 16p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 21n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 21n 1p> -> <bdd 20n 1p> [backward reach with edge: (event: button11_u_release) (guard: button11.pushed) (assignments: button11 := button11.released), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 20n 1p> -> <bdd 19n 1p> [backward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 19n 1p> -> <bdd 18n 1p> [backward reach with edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 1p> -> <bdd 17n 1p> [backward reach with edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 1p> -> <bdd 16n 1p> [backward reach with edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 16n 1p> -> <bdd 15n 1p> [backward reach with edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 15n 1p> -> <bdd 16n 2p> [backward reach with edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 16n 2p> -> <bdd 14n 1p> [backward reach with edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 14n 1p> -> <bdd 22n 6p> [backward reach with edge: (event: out_U_N_c_red) (guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_N_A := out_U_N_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 22n 6p> -> <bdd 20n 6p> [backward reach with edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 20n 6p> -> <bdd 22n 12p> [backward reach with edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 22n 12p> -> <bdd 18n 6p> [backward reach with edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 6p> -> <bdd 17n 11p> [backward reach with edge: (event: out_U_S_c_red) (guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_S_A := out_U_S_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 11p> -> <bdd 16n 11p> [backward reach with edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 16n 11p> -> <bdd 17n 22p> [backward reach with edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 22p> -> <bdd 18n 33p> [backward reach with edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 33p> -> <bdd 17n 33p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 33p> -> <bdd 16n 22p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 16n 22p> -> <bdd 17n 33p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 33p> -> <bdd 14n 11p> [backward reach with edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 14n 11p> -> <bdd 26n 15p> [backward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 26n 15p> -> <bdd 25n 15p> [backward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 25n 15p> -> <bdd 25n 26p> [backward reach with edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 25n 26p> -> <bdd 23n 26p> [backward reach with edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 23n 26p> -> <bdd 25n 52p> [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 25n 52p> -> <bdd 27n 78p> [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 27n 78p> -> <bdd 25n 78p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 25n 78p> -> <bdd 23n 52p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 23n 52p> -> <bdd 25n 78p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 25n 78p> -> <bdd 19n 26p> [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 19n 26p> -> <bdd 18n 34p> [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 34p> -> <bdd 18n 38p> [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 38p> -> <bdd 17n 56p> [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 17n 56p> -> <bdd 10n 16p> [backward reach with edge: (event: button11_u_push) (guard: button11.released) (assignments: button11 := button11.pushed), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 10n 16p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 10n 18p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: out_U_N_c_red) (guard: out_U_N_A.green -> out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_N_A := out_U_N_A.red): guard: out_U_N_A.green and (out_U_N_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed))) -> <bdd 16n 80p>.
Edge (event: out_U_S_c_red) (guard: out_U_S_A.green -> out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed)))) (assignments: out_U_S_A := out_U_S_A.red): guard: out_U_S_A.green and (out_U_S_A.red or (button11.pushed or emergencystop.pushed) or (stop1.pushed or (stop2.pushed or stop4.pushed))) -> <bdd 16n 80p>.
Edge (event: in_U_N_c_redgreen) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redgreen): guard: in_U_N_A.red -> in_U_N_A.red and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.red and in_U_S_A.redgreen)).
Edge (event: in_U_N_c_redgreen) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.redgreen): guard: in_U_N_A.green -> in_U_N_A.green and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.green and in_U_S_A.redgreen)).
Edge (event: in_U_N_c_redred) (guard: in_U_N_A.red) (assignments: in_U_N_A := in_U_N_A.redred): guard: in_U_N_A.red -> in_U_N_A.red and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.red and in_U_S_A.redgreen)).
Edge (event: in_U_N_c_red) (guard: in_U_N_A.green) (assignments: in_U_N_A := in_U_N_A.red): guard: in_U_N_A.green -> in_U_N_A.green and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.green and in_U_S_A.redgreen)).
Edge (event: in_U_N_c_red) (guard: in_U_N_A.redred) (assignments: in_U_N_A := in_U_N_A.red): guard: in_U_N_A.redred -> in_U_N_A.redred and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.redred and in_U_S_A.redgreen)).
Edge (event: in_U_N_c_red) (guard: in_U_N_A.redgreen) (assignments: in_U_N_A := in_U_N_A.red): guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.redgreen and in_U_S_A.redgreen)).
Edge (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen): guard: in_U_S_A.red -> <bdd 12n 6p>.
Edge (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen): guard: in_U_S_A.green -> <bdd 12n 6p>.
Edge (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred): guard: in_U_S_A.red -> <bdd 12n 6p>.
Edge (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red): guard: in_U_S_A.green -> <bdd 12n 6p>.
Edge (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red): guard: in_U_S_A.redred -> <bdd 12n 6p>.
Edge (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red): guard: in_U_S_A.redgreen -> <bdd 12n 6p>.

Final synthesis result:
  State: (controlled-behavior: <bdd 10n 16p>)
    Edge: (event: button11_u_push) (guard: button11.released) (assignments: button11 := button11.pushed)
    Edge: (event: button11_u_release) (guard: button11.pushed) (assignments: button11 := button11.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed)
    Edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released)
    Edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed)
    Edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.red)
    Edge: (event: out_U_N_u_r_on) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.redgreen)
    Edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.off) (assignments: out_U_N_S := out_U_N_S.green)
    Edge: (event: out_U_N_u_g_on) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.redgreen)
    Edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.red) (assignments: out_U_N_S := out_U_N_S.off)
    Edge: (event: out_U_N_u_r_off) (guard: out_U_N_A.green and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.green)
    Edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.green) (assignments: out_U_N_S := out_U_N_S.off)
    Edge: (event: out_U_N_u_g_off) (guard: out_U_N_A.red and out_U_N_S.redgreen) (assignments: out_U_N_S := out_U_N_S.red)
    Edge: (event: out_U_N_c_green) (guard: out_U_N_A.red -> <bdd 15n 36p>) (assignments: out_U_N_A := out_U_N_A.green)
    Edge: (event: out_U_N_c_red) (guard: out_U_N_A.green -> <bdd 16n 80p>) (assignments: out_U_N_A := out_U_N_A.red)
    Edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.red)
    Edge: (event: out_U_S_u_r_on) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.redgreen)
    Edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.off) (assignments: out_U_S_S := out_U_S_S.green)
    Edge: (event: out_U_S_u_g_on) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.redgreen)
    Edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.red) (assignments: out_U_S_S := out_U_S_S.off)
    Edge: (event: out_U_S_u_r_off) (guard: out_U_S_A.green and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.green)
    Edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.green) (assignments: out_U_S_S := out_U_S_S.off)
    Edge: (event: out_U_S_u_g_off) (guard: out_U_S_A.red and out_U_S_S.redgreen) (assignments: out_U_S_S := out_U_S_S.red)
    Edge: (event: out_U_S_c_green) (guard: out_U_S_A.red -> <bdd 15n 36p>) (assignments: out_U_S_A := out_U_S_A.green)
    Edge: (event: out_U_S_c_red) (guard: out_U_S_A.green -> <bdd 16n 80p>) (assignments: out_U_S_A := out_U_S_A.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redred and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_on) (guard: in_U_N_A.redgreen and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_g_on) (guard: in_U_N_A.redgreen and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.off) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_s_on) (guard: in_U_N_A.redred and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.redgreenred)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.red) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_r_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.greenred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.green) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.redgreen) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.lowred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_g_off) (guard: in_U_N_A.redred and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redred)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.lowred) (assignments: in_U_N_S := in_U_N_S.off)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.redred) (assignments: in_U_N_S := in_U_N_S.red)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.greenred) (assignments: in_U_N_S := in_U_N_S.green)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.red and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.green and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_u_s_off) (guard: in_U_N_A.redgreen and in_U_N_S.redgreenred) (assignments: in_U_N_S := in_U_N_S.redgreen)
    Edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.red -> in_U_N_A.red and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.red and in_U_S_A.redgreen))) (assignments: in_U_N_A := in_U_N_A.redgreen)
    Edge: (event: in_U_N_c_redgreen) (guard: in_U_N_A.green -> in_U_N_A.green and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.green and in_U_S_A.redgreen))) (assignments: in_U_N_A := in_U_N_A.redgreen)
    Edge: (event: in_U_N_c_redred) (guard: in_U_N_A.red -> in_U_N_A.red and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.red and in_U_S_A.redgreen))) (assignments: in_U_N_A := in_U_N_A.redred)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.green -> in_U_N_A.green and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.green and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.green and in_U_S_A.redgreen))) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.redred -> in_U_N_A.redred and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.redred and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.redred and in_U_S_A.redgreen))) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_red) (guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.redgreen and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.redgreen and in_U_S_A.redgreen))) (assignments: in_U_N_A := in_U_N_A.red)
    Edge: (event: in_U_N_c_green) (guard: in_U_N_A.redgreen -> in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_N_A := in_U_N_A.green)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red -> <bdd 12n 6p>) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green -> <bdd 12n 6p>) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red -> <bdd 12n 6p>) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green -> <bdd 12n 6p>) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred -> <bdd 12n 6p>) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen -> <bdd 12n 6p>) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))) (assignments: in_U_S_A := in_U_S_A.green)

Controlled system:                     exactly 1,308,672 states.

Initial (synthesis result):            <bdd 10n 16p>
Initial (uncontrolled system):         <bdd 21n 1p>
Initial (controlled system):           <bdd 21n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event out_U_N_c_green: guard: <bdd 15n 36p> -> true [assume <bdd 15n 36p>].
  Event out_U_N_c_red: guard: <bdd 16n 80p> -> true [assume <bdd 10n 20p>].
  Event out_U_S_c_green: guard: <bdd 15n 36p> -> true [assume <bdd 15n 36p>].
  Event out_U_S_c_red: guard: <bdd 16n 80p> -> true [assume <bdd 10n 20p>].
  Event in_U_N_c_redgreen: guard: (in_U_N_A.red or in_U_N_A.green) and (in_U_S_A.red or in_U_S_A.redred) or ((in_U_N_A.red or in_U_N_A.green) and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.red or in_U_N_A.green) and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or ((in_U_N_A.red or in_U_N_A.green) and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or ((in_U_N_A.red or in_U_N_A.green) and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.red or in_U_N_A.green) and in_U_S_A.redgreen)) -> true [assume <bdd 11n 10p>].
  Event in_U_N_c_redred: guard: in_U_N_A.red and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.red and in_U_S_A.redgreen)) -> true [assume in_U_N_A.red and (in_U_S_A.red or in_U_S_A.redred) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.red and (in_U_S_A.green and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.red and in_U_S_A.redgreen))].
  Event in_U_N_c_red: guard: <bdd 10n 12p> -> true [assume <bdd 11n 16p>].
  Event in_U_N_c_green: guard: in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) -> true [assume in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))].
  Event in_U_S_c_redgreen: guard: (in_U_N_A.red or in_U_N_A.redred) and (in_U_S_A.red or in_U_S_A.green) or (in_U_N_A.green and ((in_U_S_A.red or in_U_S_A.green) and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_N_A.green and ((in_U_S_A.red or in_U_S_A.green) and out_U_N_A.red) and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) or (in_U_N_A.green and ((in_U_S_A.red or in_U_S_A.green) and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or (in_U_N_A.green and ((in_U_S_A.red or in_U_S_A.green) and out_U_N_A.red) and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or in_U_N_A.redgreen and (in_U_S_A.red or in_U_S_A.green))) -> true [assume <bdd 11n 14p>].
  Event in_U_S_c_redred: guard: <bdd 12n 6p> -> true [assume <bdd 12n 6p>].
  Event in_U_S_c_red: guard: <bdd 12n 12p> -> true [assume <bdd 13n 20p>].
  Event in_U_S_c_green: guard: in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen)))) -> true [assume in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and (out_U_N_S.off and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))) or (in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and out_U_S_S.off)) or in_U_S_A.redgreen and out_U_N_A.red and ((out_U_N_S.red or out_U_N_S.redgreen) and (out_U_S_A.red and (out_U_S_S.red or out_U_S_S.redgreen))))].

Constructing output CIF specification.
Writing output CIF file "generated_files_MLDES/subplant_52_sup.cif".
